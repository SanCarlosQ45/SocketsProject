head	1.10;
access;
symbols;
locks;
comment	@// @;


1.10
date	2014.05.28.01.50.05;	author -;	state -;
branches;
next	1.9;

1.9
date	2014.05.28.01.49.46;	author -;	state -;
branches;
next	1.8;

1.8
date	2014.05.28.01.48.50;	author -;	state -;
branches;
next	1.7;

1.7
date	2014.05.28.01.45.50;	author -;	state -;
branches;
next	1.6;

1.6
date	2014.05.28.01.45.35;	author -;	state -;
branches;
next	1.5;

1.5
date	2014.05.28.01.43.11;	author -;	state -;
branches;
next	1.4;

1.4
date	2014.05.28.01.40.30;	author -;	state -;
branches;
next	1.3;

1.3
date	2014.05.28.01.40.17;	author -;	state -;
branches;
next	1.2;

1.2
date	2014.05.28.01.39.52;	author -;	state -;
branches;
next	1.1;

1.1
date	2014.05.28.01.39.35;	author -;	state -;
branches;
next	;


desc
@@


1.10
log
@-
@
text
@// $Id: hashuser.cpp,v 1.9 2014-05-27 18:49:46-07 - - $

// Program to print out port to use, based on username.
// Probably will not cause collisions.

#include <algorithm>
#include <cassert>
#include <iostream>
#include <string>
#include <vector>
using namespace std;

void uhash (const string& user) {
   size_t hash = 0;
   for (size_t i = 0; i < min (size_t (3), user.size()); ++i) {
      hash = hash * 26 + user[i] - 'a';
   }
   cout << "USER=\"" << user << "\" port " << hash + 47960 << endl;
}

int main (int argc, char** argv) {
   vector<string> args (&argv[1], &argv[argc]);
   if (args.size() == 0) args.push_back (getenv ("USER"));
   for (const auto& user: args) {
      uhash (user);
   }
   return 0;
}
@


1.9
log
@-
@
text
@d1 1
a1 1
// $Id: hashuser.cpp,v 1.8 2014-05-27 18:48:50-07 - - $
d15 1
a15 1
   for (size_t i = 0; i < min (3U, user.size()); ++i) {
@


1.8
log
@-
@
text
@d1 1
a1 1
// $Id: hashuser.cpp,v 1.7 2014-05-27 18:45:50-07 - - $
d15 1
a15 1
   for (size_t i = 0; i < min (3, user.size()); ++i) {
@


1.7
log
@-
@
text
@d1 1
a1 1
// $Id: hashuser.cpp,v 1.6 2014-05-27 18:45:35-07 - - $
d6 1
d14 4
a17 1
   int hash = ((user[0]-'a')*26 + user[1]-'a')* 26 + user[2]-'a';
@


1.6
log
@-
@
text
@d1 1
a1 1
// $Id: hashuser.cpp,v 1.5 2014-05-27 18:43:11-07 - - $
d12 1
a12 1
void hash (const string& user) {
d21 1
a21 1
      hash (user);
@


1.5
log
@-
@
text
@d1 1
a1 1
// $Id: hashuser.cpp,v 1.4 2014-05-27 18:40:30-07 - - $
d12 4
d19 1
d21 1
a21 3
      cout << "USER=\"" << user << "\"";
      int hash = ((user[0]-'a')*26 + user[1]-'a')* 26 + user[2]-'a';
      cout << " port " << hash + 47960 << endl;
@


1.4
log
@-
@
text
@d1 1
a1 1
// $Id: hashuser.cpp,v 1.3 2014-05-27 18:40:17-07 - - $
a6 2
#include <cstdlib>
#include <cstring>
d8 2
d13 8
a20 7
int main() {
   char* user = getenv ("USER");
   assert (user != nullptr);
   cout << "USER=\"" << user << "\"";
   assert (strlen (user) >= 2);
   int hash = ((user[0]-'a')*26 + user[1]-'a')* 26 + user[2]-'a';
   cout << " port " << hash + 47960 << endl;
@


1.3
log
@-
@
text
@d1 1
a1 1
// $Id: hashuser.cpp,v 1.2 2014-05-27 18:39:52-07 - - $
d19 1
a19 1
   cout << " port " << hash + 47960;
@


1.2
log
@-
@
text
@d1 1
a1 1
// $Id: hashuser.cpp,v 1.1 2014-05-27 18:39:35-07 - - $
d16 1
a16 1
   cout << "USER=\"" << user << "\"" << endl;
d19 1
a19 1
   cout << "port " << hash + 47960;
@


1.1
log
@-
@
text
@d1 1
a1 1
// $Id$
d6 3
a9 2
#include <cstdlib>
#include <cassert>
d16 1
a16 1
   cout << "USER=\" << user << "\"" << endl;
@
